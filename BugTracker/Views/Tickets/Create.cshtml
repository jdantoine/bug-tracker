@model BugTracker.Models.CreateEditTicketViewModel

@{
    ViewBag.Title = "Create";
}

<div class="col-md-8 col-md-offset-2">
    <div class="box-info shadow">
        <h2><strong>Create Ticket</strong> for @Model.ProjectName</h2>
        <div class="box-content">
            @using (Html.BeginForm("Create", "Tickets"))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(m=>m.ProjectId)

                <div class="form-group">
                    @Html.LabelFor(m => m.Ticket.Name, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Ticket.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ticket.Name, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Ticket.Description, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Ticket.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ticket.Description, "", new { @class = "text-anger" })
                </div>

                if (User.IsInRole("Administrator") || User.IsInRole("Project Manager"))
                {
                    <div class="form-group">
                        <label>Priority</label>
                        @Html.DropDownListFor(m => m.Ticket.PriorityId, Model.Priorities, "Select Priority", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Ticket.PriorityId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Ticket.AssignedTo, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.Ticket.AssignedToId, Model.Developers, "Select Developer to Assign", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Ticket.AssignedToId, "", new { @class = "text-danger" })
                    </div>
                }

                <div class="form-group">
                    <label>Development Phase</label>
                    @Html.DropDownListFor(model => model.Ticket.PhaseId, Model.Phases, "Select Development Phase", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ticket.PhaseId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Type</label>
                    @Html.DropDownListFor(model => model.Ticket.ActionId, Model.Actions, "Select Type of Required Work", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ticket.ActionId, "", new { @class = "text-danger" })
                </div>
                <div class="pull-right">
                    <input type="submit" class="btn btn-warning" value="Create Ticket" />
                    <button type="button" class="cancel btn btn-warning">Cancel</button>
                    @*<a href=@Url.Action("Index", "Projects") class="btn btn-warning">To Projects</a>
                    <a href=@Url.Action("UserTickets") class="btn btn-warning">To My Tickets</a>
                    @if (User.IsInRole("Administrator"))
                {
                        <a href=@Url.Action("Index") class="btn btn-warning">To All Tickets</a>
                    }*@
                </div>
            }

        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
